export const CHAIN_ID = 100; // Gnosis Chain
export const RPC_URL = "https://rpc.gnosis.gateway.fm";
export const EXPLORER_URL = "https://gnosisscan.io";

export const LOP_V4_GNOSIS = "0x111111125421ca6dc452d289314280a0f8842a65" as const;

export const VAULT_ADDRESS = "0x42AD721db31C6eb65d8332BF0F7E26bff1eB9f6b" as const;
export const CALLTOKEN_ADDRESS = "0x25D2203b0e4908594009A6e18b175f5996b08375" as const;

export const ERC1155_PROXY_ADDRESS = "0x5EaF7a20901e87FD60E4414E82C1c7e58903F713" as const;

export const ORACLE_GNO_WXDAI = "0x25bF72c741Ea8833154AC093f341D0A6434278d2" as const;

export const TOKEN_ADDRESSES = {
  WXDAI: "0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d" as const,
  USDC: "0x2a22f9c3b484c3629090FeED35F17Ff8F88f76F0" as const,
  WETH: "0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1" as const,
  GNO: "0x9C58BAcC331c9aa871AFD802DB6379a98e80CEdb" as const,
};


export const vaultAbi = [
  // constructor
  {
    type: "constructor",
    stateMutability: "nonpayable",
    inputs: [
      { name: "underlying", type: "address" },
      { name: "ct", type: "address" },
      { name: "admin", type: "address" },
    ],
  },

  // AccessControl + roles
  {
    type: "function",
    stateMutability: "view",
    name: "hasRole",
    inputs: [
      { name: "role", type: "bytes32" },
      { name: "account", type: "address" },
    ],
    outputs: [{ name: "", type: "bool" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "SERIES_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "DEFAULT_ADMIN_ROLE",
    inputs: [],
    outputs: [{ name: "", type: "bytes32" }],
  },

  // Series management
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "defineSeries",
    inputs: [
      { name: "underlying", type: "address" },
      { name: "underlyingDecimals", type: "uint8" },
      { name: "strike", type: "uint256" },
      { name: "expiry", type: "uint64" },
      { name: "collateralPerOption", type: "uint256" },
      { name: "oracle", type: "address" },
    ],
    outputs: [{ name: "id", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "series",
    inputs: [{ name: "id", type: "uint256" }],
    outputs: [
      { name: "underlying", type: "address" },
      { name: "underlyingDecimals", type: "uint8" },
      { name: "strike", type: "uint256" },
      { name: "expiry", type: "uint64" },
      { name: "collateralPerOption", type: "uint256" },
      { name: "oracle", type: "address" },
      { name: "settled", type: "bool" },
    ],
  },

  // Collateral
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "deposit",
    inputs: [{ name: "amount", type: "uint256" }],
    outputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "withdraw",
    inputs: [{ name: "amount", type: "uint256" }],
    outputs: [],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "freeCollateralOf",
    inputs: [{ name: "maker", type: "address" }],
    outputs: [{ name: "", type: "uint256" }],
  },
  // autogenerated public getters for mappings
  {
    type: "function",
    stateMutability: "view",
    name: "collateralBalance",
    inputs: [{ name: "", type: "address" }],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "totalLocked",
    inputs: [{ name: "", type: "address" }],
    outputs: [{ name: "", type: "uint256" }],
  },

  // Mint options
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "mintOptions",
    inputs: [
      { name: "id", type: "uint256" },
      { name: "qty", type: "uint256" },
    ],
    outputs: [],
  },

  // Settlement / exercise / reclaim
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "settleSeries",
    inputs: [{ name: "id", type: "uint256" }],
    outputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "exercise",
    inputs: [
      { name: "id", type: "uint256" },
      { name: "qty", type: "uint256" },
    ],
    outputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "reclaim",
    inputs: [{ name: "id", type: "uint256" }],
    outputs: [],
  },

  // Views for aggregates / pro-rata logic
  {
    type: "function",
    stateMutability: "view",
    name: "exerciseShareOf",
    inputs: [
      { name: "maker", type: "address" },
      { name: "id", type: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "reclaimableOf",
    inputs: [
      { name: "maker", type: "address" },
      { name: "id", type: "uint256" },
    ],
    outputs: [
      { name: "reclaimable", type: "uint256" },
      { name: "share", type: "uint256" },
    ],
  },

  // autogenerated getters for other public mappings
  {
    type: "function",
    stateMutability: "view",
    name: "totalLockedBySeries",
    inputs: [{ name: "", type: "uint256" }],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "lockedBaselineAtSettle",
    inputs: [{ name: "", type: "uint256" }],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "totalExerciseOut",
    inputs: [{ name: "", type: "uint256" }],
    outputs: [{ name: "", type: "uint256" }],
  },

  // Admin pause/unpause
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "pause",
    inputs: [],
    outputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "unpause",
    inputs: [],
    outputs: [],
  },

  // Immutable accessors
  {
    type: "function",
    stateMutability: "view",
    name: "UNDERLYING",
    inputs: [],
    outputs: [{ name: "", type: "address" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "CALL_TOKEN",
    inputs: [],
    outputs: [{ name: "", type: "address" }],
  },

  // Events
  {
    type: "event",
    name: "SeriesDefined",
    inputs: [
      { indexed: true, name: "id", type: "uint256" },
      { indexed: true, name: "underlying", type: "address" },
      { indexed: false, name: "strike", type: "uint256" },
      { indexed: false, name: "expiry", type: "uint64" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Deposited",
    inputs: [
      { indexed: true, name: "maker", type: "address" },
      { indexed: false, name: "amount", type: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdrawn",
    inputs: [
      { indexed: true, name: "maker", type: "address" },
      { indexed: false, name: "amount", type: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Minted",
    inputs: [
      { indexed: true, name: "maker", type: "address" },
      { indexed: true, name: "id", type: "uint256" },
      { indexed: false, name: "qty", type: "uint256" },
      { indexed: false, name: "collateralLocked", type: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Settled",
    inputs: [
      { indexed: true, name: "id", type: "uint256" },
      { indexed: false, name: "priceWXDAI", type: "uint256" },
      { indexed: false, name: "inTheMoneyAtSettle", type: "bool" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Exercised",
    inputs: [
      { indexed: true, name: "holder", type: "address" },
      { indexed: true, name: "id", type: "uint256" },
      { indexed: false, name: "qty", type: "uint256" },
      { indexed: false, name: "payoffUnderlying", type: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ExercisePayout",
    inputs: [
      { indexed: true, name: "id", type: "uint256" },
      { indexed: true, name: "holder", type: "address" },
      { indexed: false, name: "qty", type: "uint256" },
      { indexed: false, name: "payout", type: "uint256" },
      { indexed: false, name: "totalExerciseOutAfter", type: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReclaimCalculated",
    inputs: [
      { indexed: true, name: "maker", type: "address" },
      { indexed: true, name: "id", type: "uint256" },
      { indexed: false, name: "makerLockedBefore", type: "uint256" },
      { indexed: false, name: "exerciseShare", type: "uint256" },
      { indexed: false, name: "reclaimed", type: "uint256" },
      { indexed: false, name: "totalLockedBySeriesAfter", type: "uint256" },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Reclaimed",
    inputs: [
      { indexed: true, name: "maker", type: "address" },
      { indexed: true, name: "id", type: "uint256" },
      { indexed: false, name: "amount", type: "uint256" },
    ],
    anonymous: false,
  },
] as const;

/* ------------------------------ CallToken (ERC1155) ------------------------------ */
export const erc1155Abi = [
  {
    type: "function",
    stateMutability: "view",
    name: "balanceOf",
    inputs: [
      { name: "account", type: "address" },
      { name: "id", type: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "isApprovedForAll",
    inputs: [
      { name: "account", type: "address" },
      { name: "operator", type: "address" },
    ],
    outputs: [{ name: "", type: "bool" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "setApprovalForAll",
    inputs: [
      { name: "operator", type: "address" },
      { name: "approved", type: "bool" },
    ],
    outputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "safeTransferFrom",
    inputs: [
      { name: "from", type: "address" },
      { name: "to", type: "address" },
      { name: "id", type: "uint256" },
      { name: "value", type: "uint256" },
      { name: "data", type: "bytes" },
    ],
    outputs: [],
  },
] as const;

/* ---------------------------------- ERC-20 ---------------------------------- */
export const erc20Abi = [
  {
    type: "function",
    stateMutability: "view",
    name: "decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint8" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "symbol",
    inputs: [],
    outputs: [{ name: "", type: "string" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "name",
    inputs: [],
    outputs: [{ name: "", type: "string" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "balanceOf",
    inputs: [{ name: "account", type: "address" }],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "view",
    name: "allowance",
    inputs: [
      { name: "owner", type: "address" },
      { name: "spender", type: "address" },
    ],
    outputs: [{ name: "", type: "uint256" }],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "approve",
    inputs: [
      { name: "spender", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    outputs: [{ name: "", type: "bool" }],
  },
] as const;

export const erc1155ProxyAbi = [
  {
    type: "constructor",
    stateMutability: "nonpayable",
    inputs: [],
  },
  {
    type: "function",
    stateMutability: "nonpayable",
    name: "func_301JL5R",
    inputs: [
      { name: "from", type: "address" },
      { name: "to", type: "address" },
      { name: "amount", type: "uint256" },
      { name: "token", type: "address" },    // IERC1155 contract address
      { name: "tokenId", type: "uint256" },  // ERC1155 token ID
      { name: "data", type: "bytes" },       // Transfer data
    ],
    outputs: [],
  },
  {
    type: "error",
    name: "ERC1155ProxyBadSelector",
    inputs: [],
  },
] as const;

export const lopV4Abi = [
  {
    "type": "constructor",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "weth",
        "type": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "AdvanceEpochFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ArbitraryStaticCallFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "BadCurveSwapSelector",
    "inputs": []
  },
  {
    "type": "error",
    "name": "BadPool",
    "inputs": []
  },
  {
    "type": "error",
    "name": "BadSignature",
    "inputs": []
  },
  {
    "type": "error",
    "name": "BitInvalidatedOrder",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ETHTransferFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EnforcedPause",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EpochManagerAndBitInvalidatorsAreIncompatible",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EthDepositRejected",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ExpectedPause",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InsufficientBalance",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidMsgValue",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidPermit2Transfer",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidShortString",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidatedOrder",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MakingAmountTooLow",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MismatchArraysLengths",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OrderExpired",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OrderIsNotSuitableForMassInvalidation",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OwnableInvalidOwner",
    "inputs": [
      {
        "name": "owner",
        "type": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "OwnableUnauthorizedAccount",
    "inputs": [
      {
        "name": "account",
        "type": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "PartialFillNotAllowed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "Permit2TransferAmountTooHigh",
    "inputs": []
  },
  {
    "type": "error",
    "name": "PredicateIsNotTrue",
    "inputs": []
  },
  {
    "type": "error",
    "name": "PrivateOrder",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ReentrancyDetected",
    "inputs": []
  },
  {
    "type": "error",
    "name": "RemainingInvalidatedOrder",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ReservesCallFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ReturnAmountIsNotEnough",
    "inputs": [
      {
        "name": "result",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "SafeTransferFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "SafeTransferFromFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "SimulationResults",
    "inputs": [
      {
        "name": "success",
        "type": "bool"
      },
      {
        "name": "res",
        "type": "bytes"
      }
    ]
  },
  {
    "type": "error",
    "name": "StringTooLong",
    "inputs": [
      {
        "name": "str",
        "type": "string"
      }
    ]
  },
  {
    "type": "error",
    "name": "SwapWithZeroAmount",
    "inputs": []
  },
  {
    "type": "error",
    "name": "TakingAmountExceeded",
    "inputs": []
  },
  {
    "type": "error",
    "name": "TakingAmountTooHigh",
    "inputs": []
  },
  {
    "type": "error",
    "name": "TransferFromMakerToTakerFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "TransferFromTakerToMakerFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "WrongSeriesNonce",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ZeroAddress",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ZeroMinReturn",
    "inputs": []
  },
  {
    "type": "event",
    "name": "BitInvalidatorUpdated",
    "anonymous": false,
    "inputs": [
      {
        "name": "maker",
        "type": "address",
        "indexed": true
      },
      {
        "name": "slotIndex",
        "type": "uint256",
        "indexed": false
      },
      {
        "name": "slotValue",
        "type": "uint256",
        "indexed": false
      }
    ]
  },
  {
    "type": "event",
    "name": "EIP712DomainChanged",
    "anonymous": false,
    "inputs": []
  },
  {
    "type": "event",
    "name": "EpochIncreased",
    "anonymous": false,
    "inputs": [
      {
        "name": "maker",
        "type": "address",
        "indexed": true
      },
      {
        "name": "series",
        "type": "uint256",
        "indexed": false
      },
      {
        "name": "newEpoch",
        "type": "uint256",
        "indexed": false
      }
    ]
  },
  {
    "type": "event",
    "name": "OrderCancelled",
    "anonymous": false,
    "inputs": [
      {
        "name": "orderHash",
        "type": "bytes32",
        "indexed": false
      }
    ]
  },
  {
    "type": "event",
    "name": "OrderFilled",
    "anonymous": false,
    "inputs": [
      {
        "name": "orderHash",
        "type": "bytes32",
        "indexed": false
      },
      {
        "name": "remainingAmount",
        "type": "uint256",
        "indexed": false
      }
    ]
  },
  {
    "type": "event",
    "name": "OwnershipTransferred",
    "anonymous": false,
    "inputs": [
      {
        "name": "previousOwner",
        "type": "address",
        "indexed": true
      },
      {
        "name": "newOwner",
        "type": "address",
        "indexed": true
      }
    ]
  },
  {
    "type": "event",
    "name": "Paused",
    "anonymous": false,
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": false
      }
    ]
  },
  {
    "type": "event",
    "name": "Unpaused",
    "anonymous": false,
    "inputs": [
      {
        "name": "account",
        "type": "address",
        "indexed": false
      }
    ]
  },
  {
    "type": "function",
    "name": "advanceEpoch",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "series",
        "type": "uint96"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "and",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "offsets",
        "type": "uint256"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "arbitraryStaticCall",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "bitInvalidatorForOrder",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "maker",
        "type": "address"
      },
      {
        "name": "slot",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "bitsInvalidateForOrder",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "makerTraits",
        "type": "uint256"
      },
      {
        "name": "additionalMask",
        "type": "uint256"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "cancelOrder",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "makerTraits",
        "type": "uint256"
      },
      {
        "name": "orderHash",
        "type": "bytes32"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "cancelOrders",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "makerTraits",
        "type": "uint256[]"
      },
      {
        "name": "orderHashes",
        "type": "bytes32[]"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "checkPredicate",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "predicate",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "clipperSwap",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "clipperExchange",
        "type": "address"
      },
      {
        "name": "srcToken",
        "type": "uint256"
      },
      {
        "name": "dstToken",
        "type": "address"
      },
      {
        "name": "inputAmount",
        "type": "uint256"
      },
      {
        "name": "outputAmount",
        "type": "uint256"
      },
      {
        "name": "goodUntil",
        "type": "uint256"
      },
      {
        "name": "r",
        "type": "bytes32"
      },
      {
        "name": "vs",
        "type": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "clipperSwapTo",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "clipperExchange",
        "type": "address"
      },
      {
        "name": "recipient",
        "type": "address"
      },
      {
        "name": "srcToken",
        "type": "uint256"
      },
      {
        "name": "dstToken",
        "type": "address"
      },
      {
        "name": "inputAmount",
        "type": "uint256"
      },
      {
        "name": "outputAmount",
        "type": "uint256"
      },
      {
        "name": "goodUntil",
        "type": "uint256"
      },
      {
        "name": "r",
        "type": "bytes32"
      },
      {
        "name": "vs",
        "type": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "curveSwapCallback",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "",
        "type": "address"
      },
      {
        "name": "",
        "type": "address"
      },
      {
        "name": "inCoin",
        "type": "address"
      },
      {
        "name": "dx",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "uint256"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "eip712Domain",
    "stateMutability": "view",
    "inputs": [],
    "outputs": [
      {
        "name": "fields",
        "type": "bytes1"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "version",
        "type": "string"
      },
      {
        "name": "chainId",
        "type": "uint256"
      },
      {
        "name": "verifyingContract",
        "type": "address"
      },
      {
        "name": "salt",
        "type": "bytes32"
      },
      {
        "name": "extensions",
        "type": "uint256[]"
      }
    ]
  },
  {
    "type": "function",
    "name": "epoch",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "maker",
        "type": "address"
      },
      {
        "name": "series",
        "type": "uint96"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "epochEquals",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "maker",
        "type": "address"
      },
      {
        "name": "series",
        "type": "uint256"
      },
      {
        "name": "makerEpoch",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "eq",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "value",
        "type": "uint256"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "ethUnoswap",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "ethUnoswap2",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "ethUnoswap3",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      },
      {
        "name": "dex3",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "ethUnoswapTo",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "to",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "ethUnoswapTo2",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "to",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "ethUnoswapTo3",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "to",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      },
      {
        "name": "dex3",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "fillContractOrder",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "order",
        "type": "tuple"
      },
      {
        "name": "signature",
        "type": "bytes"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "takerTraits",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "bytes32"
      }
    ]
  },
  {
    "type": "function",
    "name": "fillContractOrderArgs",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "order",
        "type": "tuple"
      },
      {
        "name": "signature",
        "type": "bytes"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "takerTraits",
        "type": "uint256"
      },
      {
        "name": "args",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "bytes32"
      }
    ]
  },
  {
    "type": "function",
    "name": "fillOrder",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "order",
        "type": "tuple"
      },
      {
        "name": "r",
        "type": "bytes32"
      },
      {
        "name": "vs",
        "type": "bytes32"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "takerTraits",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "bytes32"
      }
    ]
  },
  {
    "type": "function",
    "name": "fillOrderArgs",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "order",
        "type": "tuple"
      },
      {
        "name": "r",
        "type": "bytes32"
      },
      {
        "name": "vs",
        "type": "bytes32"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "takerTraits",
        "type": "uint256"
      },
      {
        "name": "args",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "uint256"
      },
      {
        "name": "",
        "type": "bytes32"
      }
    ]
  },
  {
    "type": "function",
    "name": "gt",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "value",
        "type": "uint256"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "hashOrder",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "order",
        "type": "tuple"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bytes32"
      }
    ]
  },
  {
    "type": "function",
    "name": "increaseEpoch",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "series",
        "type": "uint96"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "lt",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "value",
        "type": "uint256"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "not",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "or",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "offsets",
        "type": "uint256"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "owner",
    "stateMutability": "view",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address"
      }
    ]
  },
  {
    "type": "function",
    "name": "pause",
    "stateMutability": "nonpayable",
    "inputs": [],
    "outputs": []
  },
  {
    "type": "function",
    "name": "paused",
    "stateMutability": "view",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "bool"
      }
    ]
  },
  {
    "type": "function",
    "name": "permitAndCall",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "permit",
        "type": "bytes"
      },
      {
        "name": "action",
        "type": "bytes"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "rawRemainingInvalidatorForOrder",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "maker",
        "type": "address"
      },
      {
        "name": "orderHash",
        "type": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "remainingInvalidatorForOrder",
    "stateMutability": "view",
    "inputs": [
      {
        "name": "maker",
        "type": "address"
      },
      {
        "name": "orderHash",
        "type": "bytes32"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "renounceOwnership",
    "stateMutability": "nonpayable",
    "inputs": [],
    "outputs": []
  },
  {
    "type": "function",
    "name": "rescueFunds",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "token",
        "type": "address"
      },
      {
        "name": "amount",
        "type": "uint256"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "simulate",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "target",
        "type": "address"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "swap",
    "stateMutability": "payable",
    "inputs": [
      {
        "name": "executor",
        "type": "address"
      },
      {
        "name": "desc",
        "type": "tuple"
      },
      {
        "name": "data",
        "type": "bytes"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      },
      {
        "name": "spentAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "transferOwnership",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "newOwner",
        "type": "address"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "uniswapV3SwapCallback",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "amount0Delta",
        "type": "int256"
      },
      {
        "name": "amount1Delta",
        "type": "int256"
      },
      {
        "name": "",
        "type": "bytes"
      }
    ],
    "outputs": []
  },
  {
    "type": "function",
    "name": "unoswap",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "token",
        "type": "uint256"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "unoswap2",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "token",
        "type": "uint256"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "unoswap3",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "token",
        "type": "uint256"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      },
      {
        "name": "dex3",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "unoswapTo",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "to",
        "type": "uint256"
      },
      {
        "name": "token",
        "type": "uint256"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "unoswapTo2",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "to",
        "type": "uint256"
      },
      {
        "name": "token",
        "type": "uint256"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "unoswapTo3",
    "stateMutability": "nonpayable",
    "inputs": [
      {
        "name": "to",
        "type": "uint256"
      },
      {
        "name": "token",
        "type": "uint256"
      },
      {
        "name": "amount",
        "type": "uint256"
      },
      {
        "name": "minReturn",
        "type": "uint256"
      },
      {
        "name": "dex",
        "type": "uint256"
      },
      {
        "name": "dex2",
        "type": "uint256"
      },
      {
        "name": "dex3",
        "type": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "returnAmount",
        "type": "uint256"
      }
    ]
  },
  {
    "type": "function",
    "name": "unpause",
    "stateMutability": "nonpayable",
    "inputs": [],
    "outputs": []
  },
  {
    "type": "receive",
    "stateMutability": "payable"
  }
] as const;

/* ------------------------------- Convenience ------------------------------- */
export const ADDRESSES = {
  chainId: CHAIN_ID,
  rpcUrl: RPC_URL,
  explorer: EXPLORER_URL,
  oneInchLopV4: LOP_V4_GNOSIS,
  vault: VAULT_ADDRESS,
  callToken1155: CALLTOKEN_ADDRESS,
  erc1155Proxy: ERC1155_PROXY_ADDRESS,
  oracleGnoWx: ORACLE_GNO_WXDAI,
  tokens: TOKEN_ADDRESSES,
} as const;




